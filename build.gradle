subprojects {
	apply plugin: 'java'

	ext {
		jUnitVersion = '4.12'
		springVersion = '4.1.4.RELEASE'
		hibernateOrmVersion = '4.3.8.Final'
		logbackVersion = '1.1.2'
		slf4jVersion = '1.7.6'
		jclOverSlf4jVersion = '1.7.10'
		mockitoVersion = '2.0.2-beta'
		commonsValidatorVersion = '1.4.1'
		hibernateValidatorVersion = '5.1.3.Final'
		apacheCommonsLangVersion = '3.3.2'
		jstlVersion = '1.2'
		servletApiVersion = '3.1.0'
		springSecurityVersion = '3.2.5.RELEASE'
		seleniumVersion = '2.44.0'
		javaxRsApiVersion = '2.0.1'
		apacheCxfJaxRsVersion = '3.0.3'
		jacksonJaxRsJsonProviderVersion = '2.5.1'
		swaggerJaxRsVersion = '1.3.12'
	}

	configurations {
		all {
			// Excluding commons-logging:commons-logging, as we use slf4j
			exclude group: 'commons-logging', module: 'commons-logging'
		}
	}

	repositories {
		mavenCentral()
	}

	version = '0.4.0-RELEASE'
	group = 'computer-database'

	dependencies {
		// Main Spring dependency
		compile group: 'org.springframework', name: 'spring-context', version: springVersion

		// Logging dependencies
		compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
		compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: jclOverSlf4jVersion
		runtime group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion

		// Testing dependencies
		testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
		testCompile group: 'junit', name: 'junit', version: jUnitVersion	
	}

	
	// Defining a command-line parameter to skip all unit tests
	test.onlyIf {
		!Boolean.getBoolean('test.skip')
	}

}



